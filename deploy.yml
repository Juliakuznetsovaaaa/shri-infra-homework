name: Deploy to Prod

on:
  workflow_dispatch:
    inputs:
      release-version:
        description: Версия релиза, который необходимо выкатить в прод
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Check for image in registry
        run: |
          docker pull cr.yandex/${{I/app:${{ inputs.release-version }}_latest
          if [ $? -ne 0 ]; then
            echo "Образ с тегом ${{REGISTRY_ID}} inputs.release-version }}_latest не найден в реджистри."
            exit 1
          fi

      - name: Deploy to VM
        uses: actions/ssh@v3
        with:
          host: <адрес_виртуальной_машины>
          username: <имя_пользователя>
          password: <пароль>
          script: |
            docker pull cr.yandex/${{REGISTRY_ID}}/app:${{ inputs.release-version }}_latest
            docker run -d -p 3000:8080 cr.yandex/${{REGISTRY_ID}}/app:${{ inputs.release-version }}_latest

      - name: Add comment to Release Issue
        uses: actions/github-script@v6
        with:
          script: |
            const { context, github } = github;
            const deployDate = new Date().toLocaleDateString();
            const deployAuthor = context.actor;
            const releaseVersion = context.inputs['release-version'];
            const releaseIssue = context.issues.getIssue({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: releaseVersion,
            });
            github.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: releaseVersion,
              body: **Дата выкатки в прод:** ${deployDate}n**Автор выкатки:** ${deployAuthor},
            });
