name: Release

on:
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16.x

      - name: Install dependencies
        run: npm install

      - name: Run linter
        run: npm run lint

      - name: Run tests
        run: npm run test

      - name: Create release branch
        run: git checkout -b releases/${{ github.run_number }}

      - name: Build Docker image
        run: |
          docker build -t cr.yandex/<идентификатор_реестра>/app:${{ github.run_number }} .
          docker tag cr.yandex/<идентификатор_реестра>/app:${{ github.run_number }} cr.yandex/<идентификатор_реестра>/app:${{ github.run_number }}_latest

      - name: Push Docker image to registry
        run: |
          docker push cr.yandex/<идентификатор_реестра>/app:${{ github.run_number }}
          docker push cr.yandex/<идентификатор_реестра>/app:${{ github.run_number }}_latest

      - name: Create release tag
        run: |
          git tag -a ${{ github.run_number }} -m "Release version ${{ github.run_number }}"
          git push origin ${{ github.run_number }}

      - name: Create Release Issue
        uses: actions/github-script@v6
        with:
          script: |
            const { context } = github;
            const releaseNumber = context.runNumber;
            const releaseDate = new Date().toLocaleDateString();
            const releaseAuthor = context.actor;
            const previousRelease = context.sha ? previous release : first release;
            const commitList = context.sha ? nn**Список коммитов от ${previousRelease}:**n${context.sha} : "";
            const dockerImageLink = cr.yandex/<идентификатор_реестра>/app:${releaseNumber};
            github.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: Релиз версии ${{ github.run_number }},
              body: **Дата:** ${releaseDate}n**Автор:** ${releaseAuthor}n**Номер версии:** ${{ github.run_number }}n**Список коммитов от ${previousRelease}:**n${commitList}n**Docker образ:** ${dockerImageLink},
            });
            // Обновление CHANGELOG.md (необходимо реализовать самостоятельно)

      - name: Push changes
        run: git push origin releases/${{ github.run_number }}
